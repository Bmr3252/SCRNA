#CAF


suppressPackageStartupMessages({
  #library(openxlsx)
  #library(DESeq2)
  library(ggplot2)
  #library(ComplexHeatmap)
  library(dplyr)
  #library(FactoMineR)
  #library(factoextra)
  #library(apeglm)
  library(Seurat)
  library(patchwork)
  #library(circlize)
  library(enrichplot)# for visualisations
  #library(slingshot)
  library(tidyverse)
  #library(hrbrthemes)
  #library(viridis)
  #library(networkD3)
  #library(nichenetr)
  #library(singleCellHaystack)
  #library(scriabin)
  #library(loomR)
  #library(sf)
  #library(msigdbr)
  #library(scales)
  #library(survival)
  #library(survminer)})
  library(harmony)
  library(sctransform)
  library(RColorBrewer) # for a colourful plot
  library(pheatmap)
  library(ggupset) # for visualisations
  library(data.table)
  #library(sva)
  
  library(clusterProfiler)
  library(data.table)
  library(easybio)
  library(clustermole)
  library(GSEABase)
  library(GSVA)
  library(singscore)
  library("fgsea")
  library(ggrepel)
  library(cowplot)
  library(edgeR)
  library(Matrix)
  library(reshape2)
  library(S4Vectors)
  library(SingleCellExperiment)
  library(pheatmap)
  #library(apeglm)
  library(png)
  library(DESeq2)
  library(RColorBrewer)
  library(data.table)
  
})



# Read the object from the RDS file

Fibro2<- readRDS("C:/Users/65881/Downloads/FYP/aft 2 sub/CAF_2ND SUBSET")


Fibro3_intial<- RunUMAP(Fibro2,dims=1:20,resolution=0.001)
Fibro3_intial<- FindNeighbors(Fibro3_intial,dims=1:2,resolution=0.001,reduction = "umap")
Fibro3_intial<- FindClusters(Fibro3_intial,dims=1:20,resolution=0.001)
DimPlot(Fibro3_intial, reduction = "umap", label = TRUE, pt.size = 2.5, repel = TRUE, split.by = NULL)+
  scale_color_manual(values = pals::brewer.paired(25))



# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("KRT7", "KRT17"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c("KRT7", "KRT17"))

#salivary
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("STATH"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c( "STATH"))

#fibroblasts 
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("COL1A2"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c("COL1A2"))

#endothelial 
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("PECAM1"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c("PECAM1"))

#immune 
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("PTPRC"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c("PTPRC"))

#T cell 
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("CD3E", "NKG7"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c("CD3E", "NKG7"))

#NK cell 
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("NKG7","XCL2"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c("NKG7","XCL2"))

#B cell 
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("CD79A"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c("CD79A"))

#plasma cell 
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("IGHG1"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c("IGHG1"))

#mast cell 
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("TPSAB1"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c("TPSAB1"))

#pdc cell 
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
#VlnPlot(Fibro3_intial, features = c("LILR4"),group.by = c("seurat_clusters"),
#        pt.size = 0.2)
#FeaturePlot(Fibro3_intial,features = c("LILR4"))

#macrophages cell 
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro3_intial, features = c("CD163"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro3_intial,features = c("CD163"))


# Specify the cluster you want to keep (change as needed)
cluster_to_keep <- c("0","6")  # Change this to the cluster you want

# Subset the Seurat object to retain only the selected cluster
Fibro3<- subset(Fibro3_intial, idents = cluster_to_keep)
DimPlot(Fibro3, reduction = "umap", label = TRUE, pt.size = 2.5, repel = TRUE, split.by = NULL)+
  scale_color_manual(values = pals::brewer.paired(25))



Fibro4<- RunUMAP(Fibro3,dims=1:20,resolution=0.01)
Fibro4<- FindNeighbors(Fibro4,dims=1:2,resolution=0.01,reduction = "umap")
Fibro4<- FindClusters(Fibro4,dims=1:20,resolution=0.01)
DimPlot(Fibro4, reduction = "umap", label = TRUE, pt.size = 2.5, repel = TRUE, split.by = NULL)+
  scale_color_manual(values = pals::brewer.paired(25))

#CAFs
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro4, features = c("MMP2","FAP"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro4,features = c("MMP2","FAP"))

#MYOFIB
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro4, features = c("ACTA2"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro4,features = c("ACTA2"))
# Specify the cluster you want to keep (change as needed)
cluster_to_keepppp <- c("0","2")  # Change this to the cluster you want

# Subset the Seurat object to retain only the selected cluster
Fibro5<- subset(Fibro4, idents = cluster_to_keepppp)
Fibro6<- RunUMAP(Fibro5,dims=1:20,resolution=0.04)
Fibro6<- FindNeighbors(Fibro6,dims=1:2,resolution=0.04,reduction = "umap")
Fibro6<- FindClusters(Fibro6,dims=1:20,resolution=0.04)
DimPlot(Fibro6, reduction = "umap", label = TRUE, pt.size = 2.5, repel = TRUE, split.by = NULL)+
  scale_color_manual(values = pals::brewer.paired(25))


#mixed , can define as low quality cells,can be removed
#reduce the dimension,te
#find different Sub clusters
#Dna damaged cell>>low quality cell.filter them out
# during presentation always have the most expressed markers of the clusters indicated

#proceed to do GSEA
#macrophage
#define what could be 7,8 cluster
#what % of macrophage in each cluster (based the % , might be boundary for exclusion0)
#whether the expression is shown across all patients (jus to take note of)
#plot more genes in heat map







Fibro6$seurat_clusters <- as.character(Fibro6$seurat_clusters)

# Run PrepSCTFindMarkers to prepare the data
# Prepare Seurat object without adjusting for UMI counts>>recorrect umi in findallmarker is the main
Fibro6 <- PrepSCTFindMarkers(Fibro6)
# Check the number of total counts per cell
summary(Fibro6$nCount_RNA)
# Check the identity classes of the Seurat object
table(Fibro6$seurat_clusters)
levels(Idents(Fibro6))

Fibro6$oldcelltype.patientID <- paste(Fibro6$new_cell_type, Fibro6$patientID,sep = "_")
Idents(Fibro6) <- "oldcelltype.patientID"
table(Idents(Fibro6))




Idents(Fibro6) <- "seurat_clusters"

Fibro.de.markers<-FindAllMarkers(
  Fibro6,
  only.pos = TRUE,           # Only positive markers
  logfc.threshold = 0.25,    # Minimum log fold change
  return.thresh = 1,         # Return thresholds
  verbose = FALSE,
  recorrect_umi = FALSE
)


# Add avg_log2FC and p_val to the metadata of the Seurat object
Fibro6$gene <- Fibro.de.markers$gene
Fibro6$avg_log2FC <- Fibro.de.markers$avg_log2FC
Fibro6$p_val <- Fibro.de.markers$p_val

# Apply the specific filters to the markers
filtered.markers <- Fibro.de.markers[
  Fibro.de.markers$p_val < 0.05 &                   # p-value adjustment threshold
    abs(Fibro.de.markers$avg_log2FC) > 1 &                # Log fold change threshold
    (Fibro.de.markers$pct.1 - Fibro.de.markers$pct.2) > 0.3,  # Percentage difference threshold
]

#filtered.markers <- filtered.markers[order(-filtered.markers$pct.1, -filtered.markers$avg_log2FC),]
# Subset clusters of interest (for example, clusters 0, 1, and 2)

saveRDS(Fibro6, file = "C:/Users/65881/Downloads/FYP/aft 2 sub/CAF_dataset")
#-----------------------------------------------------------------------------------------------
Fibro6<-readRDS("C:/Users/65881/Downloads/FYP/aft 2 sub/CAF_dataset")

#CAF-0 cell >>cluster 2
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro6, features = c("FN1","ACTA2","COL1A1"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro6,features = c("FN1","ACTA2","COL1A1"))


#CAF-1 cell >>cluster 0
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro6, features = c("CXCL9"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro6,features = c("CXCL9"))

#CAF-2 cell >>cluster 1
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro6, features = c("IL6","CXCL1","IL24"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro6,features = c("IL6","CXCL1","IL24"))


#CAF-3 cell >Cluster 1
# These are now standard steps in the Seurat workflow for visualization and clustering
# Visualize canonical marker genes as violin plots.
VlnPlot(Fibro6, features = c("CFD","APOD"),group.by = c("seurat_clusters"),
        pt.size = 0.2)
FeaturePlot(Fibro6,features = c("CFD","APOD"))

Fibro6 <- RenameIdents(Fibro6, 
                      `3"" = "CAF-0", 
                      `2` = "CAF-1", 
                      `1` = "CAF-2", 
                      `0` = "CAF-3")



Fibro6$cluster_names <- Idents(Fibro6)

Fibro.de.markers %>%
  group_by(cluster) %>%
  dplyr::filter(avg_log2FC > 1) %>%
  slice_head(n = 5) %>%
  ungroup() -> top10
DoHeatmap(Fibro6, features = top10$gene) + NoLegend()

saveRDS(Fibro6, file = "C:/Users/65881/Downloads/FYP/aft 2 sub/CAF_dataset")

saveRDS(top10, file = "D:/bilal/SCT TRANSFORMED DATAS/CAFtop10genes")
